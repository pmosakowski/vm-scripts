#!/usr/bin/env python

from cmdline import Command
from vm_common import GuestFSDisk

class GrubControl(Command):
    def __init__(self):
        super(GrubControl,self).__init__()

        self.add_argument('disk_image', help='Name of disk image file to alter')
        self.add_argument('-t', '--timeout', type=int, help='Set boot timeout in seconds,' \
                ' in case of VMs it\'s handy to set it to 0', default=0)
        self.add_argument('-g', '--gfx-mode', help='GFX_MODE for the console, e.g.' \
                ' \'1024x768\' or \'800x600\' (without quotes)')

        self.parse_args()

        self.disk_image = self.args.disk_image
        self.timeout = self.args.timeout
        self.gfx_mode = self.args.gfx_mode

def set_timeout(gfs_disk, timeout, log):
    log.info('[GUEST] current GRUB_TIMEOUT value is %s', gfs_disk.gfs.aug_get('/files/etc/default/grub/GRUB_TIMEOUT'))

    gfs_disk.gfs.aug_set('/files/etc/default/grub/GRUB_TIMEOUT ', str(timeout))
    gfs_disk.gfs.aug_save()

    log.info('[GUEST] new GRUB_TIMEOUT value is %s', gfs_disk.gfs.aug_get('/files/etc/default/grub/GRUB_TIMEOUT'))

    grub_mkconfig = gfs_disk.get_executable_path('grub2-mkconfig')
    log.debug('[GUEST:%s] path to executable %s is %s', __name__, 'grub2-mkconfig', grub_mkconfig)

    output = gfs_disk.gfs.command(['grub2-mkconfig','-o','/boot/grub2/grub.cfg'])
    log.debug('[GUEST:%s] command output: %s', grub_mkconfig, output)

def set_console_resolution(gfs_disk, resolution, log):
    gfxmode = gfs_disk.gfs.aug_match('/files/etc/default/grub/GRUB_GFXMODE')
    if len(gfxmode) == 1:
        log.info('[GUEST] current GRUB_GFXMODE value is %s', gfs_disk.gfs.aug_get('/files/etc/default/grub/GRUB_GFXMODE'))
    else:
        log.info('[GUEST] GRUB_GFXMODE not set')

    gfs_disk.gfs.aug_set('/files/etc/default/grub/GRUB_GFXMODE', str(resolution))
    gfs_disk.gfs.aug_set('/files/etc/default/grub/GRUB_GFXPAYLOAD_LINUX', 'keep')
    gfs_disk.gfs.aug_save()

    log.info('[GUEST] new GRUB_GFXMODE value is %s', gfs_disk.gfs.aug_get('/files/etc/default/grub/GRUB_GFXMODE'))

    grub_mkconfig = gfs_disk.get_executable_path('grub2-mkconfig')
    log.debug('[GUEST:%s] path to executable %s is %s', __name__, 'grub2-mkconfig', grub_mkconfig)

    # refreshing the grub.cfg file
    output = gfs_disk.gfs.command(['grub2-mkconfig','-o','/boot/grub2/grub.cfg'])
    log.debug('[GUEST:%s] command output: %s', grub_mkconfig, output)

cmd = GrubControl()

disk = GuestFSDisk(cmd.disk_image, cmd.log)

if cmd.timeout != None:
    set_timeout(disk, cmd.timeout, cmd.log)

if cmd.gfx_mode != None:
    set_console_resolution(disk, cmd.gfx_mode, cmd.log)
